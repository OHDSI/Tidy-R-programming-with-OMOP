{
  "hash": "f5a6150b900f144524148328522ca299",
  "result": {
    "markdown": "## Exploring the CDM\n\nLet's first connect again to our Eunomia data and create the reference to the common data model.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dbplyr)\nlibrary(dplyr)\nlibrary(CDMConnector)\nlibrary(ggplot2)\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\n## Counting people\n\nThe OMOP CDM is person-centric, with the person table containing records to uniquely identify each person in the database. As each row refers to a unique person, we can quickly get a count of the number of individuals in the database like so\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncdm$person %>% \n  count() %>% \n  pull()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2694\n```\n:::\n:::\n\n\n\nThe person table also contains some demographic information, including a gender_concept_id for each person. We can get a count grouped by this variable, but as this uses a concept we'll also need to join to the concept table to get the corresponding concept name for each concept id.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncdm$person %>% \n  group_by(gender_concept_id) %>% \n  count() %>% \n  left_join(cdm$concept, \n            by=c(\"gender_concept_id\" = \"concept_id\")) %>% \n              select(\"gender_concept_id\", \"concept_name\", \"n\") %>% \n  collect()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 x 3\n  gender_concept_id concept_name     n\n              <dbl> <chr>        <dbl>\n1              8532 FEMALE        1373\n2              8507 MALE          1321\n```\n:::\n:::\n\n\n\nThe observation period table contains records indicating spans of time over which clinical events can be reliably observed for the people in the person table. Someone can potentially have multiple observation periods. So say we wanted a count of people grouped by the year during which their first observation period started. We could do this as below (note the use of compute() to store the results of the first query in a temporary table in the database)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfirst_observation_period <- cdm$observation_period %>%\n    group_by(person_id) %>% \n    mutate(seq = dplyr::row_number()) %>% \n    filter(seq==1) %>% \n    compute()\n\ncdm$person %>% \n  left_join(first_observation_period,\n            by = \"person_id\") %>% \n  mutate(observation_period_start_year=year(observation_period_start_date)) %>% \n  group_by(observation_period_start_year) %>% \n  count() %>% \n  collect() %>% \n  ggplot() +\n  geom_col(aes(observation_period_start_year, n)) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](ch_3_exploring_the_cdm_files/figure-pdf/unnamed-chunk-5-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n## Counting records\n\nNumber of drug exposure records per person\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncdm$person %>% \n  left_join(cdm$measurement %>% \n  group_by(person_id) %>% \n  count(name = \"condition_occurrence_records\"),\n            by=\"person_id\") %>% \n  mutate(condition_occurrence_records = if_else(\n    is.na(condition_occurrence_records), 0,\n    condition_occurrence_records)) %>% \n  group_by(condition_occurrence_records) %>%\n  count() %>% \n  collect() %>% \n  ggplot() +\n  geom_col(aes(condition_occurrence_records, n)) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](ch_3_exploring_the_cdm_files/figure-pdf/unnamed-chunk-6-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n## Working with dates\n\nDates are supported somewhat inconsistently by dbplyr, but CDMConnector provides some functions that provide more general support. We can use the datediff function from CDMConnector for example to calculate the difference between two dates. We can use this, for example, to get the number of years people's observation period last for.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncdm$observation_period %>%\n  dplyr::mutate(observation_years = \n                  !!CDMConnector::datediff(\"observation_period_start_date\", \n                             \"observation_period_end_date\", \n                             interval = \"year\"))  %>% \n  collect() %>% \n  ggplot() +\n  geom_histogram(aes(observation_years), \n                 binwidth=2, colour=\"grey\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](ch_3_exploring_the_cdm_files/figure-pdf/unnamed-chunk-7-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n## Statistical summaries\n\nWe can also use summarise for various other calculations\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncdm$person %>% \n  summarise(min_year_of_birth = min(year_of_birth, na.rm=TRUE),\n            q05_year_of_birth = quantile(year_of_birth, 0.05, na.rm=TRUE),\n            mean_year_of_birth = round(mean(year_of_birth, na.rm=TRUE),0),\n            median_year_of_birth = median(year_of_birth, na.rm=TRUE),\n            q95_year_of_birth = quantile(year_of_birth, 0.95, na.rm=TRUE),\n            max_year_of_birth = max(year_of_birth, na.rm=TRUE)) %>%  \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: ??\nColumns: 6\nDatabase: DuckDB 0.5.0 [eburn@Windows 10 x64:R 4.2.1/C:\\Users\\eburn\\AppData\\Local\\Temp\\RtmpAZskX0/mxcerpwx]\n$ min_year_of_birth    <dbl> 1908\n$ q05_year_of_birth    <dbl> 1922\n$ mean_year_of_birth   <dbl> 1958\n$ median_year_of_birth <dbl> 1961\n$ q95_year_of_birth    <dbl> 1979\n$ max_year_of_birth    <dbl> 1986\n```\n:::\n:::\n\n\n\nAs we've seen before, we can also quickly get results for various groupings or restrictions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncdm$person %>% \n   group_by(gender_concept_id) %>% \n   summarise(min_year_of_birth = min(year_of_birth, na.rm=TRUE),\n            q25_year_of_birth = quantile(year_of_birth, 0.25, na.rm=TRUE),\n            median_year_of_birth = median(year_of_birth, na.rm=TRUE),\n            q75_year_of_birth = quantile(year_of_birth, 0.75, na.rm=TRUE),\n            max_year_of_birth = max(year_of_birth, na.rm=TRUE)) %>% \n  left_join(cdm$concept, \n            by=c(\"gender_concept_id\" = \"concept_id\")) %>% \n   collect() %>% \n  ggplot(aes(x = concept_name, group = concept_name,\n             fill = concept_name)) +\n  geom_boxplot(aes(\n    lower = q25_year_of_birth, \n    upper = q75_year_of_birth, \n    middle = median_year_of_birth, \n    ymin = min_year_of_birth, \n    ymax = max_year_of_birth),\n    stat = \"identity\", width = 0.5) + \n  theme_bw()+ \n  theme(legend.position = \"none\") +\n  xlab(\"\")\n```\n\n::: {.cell-output-display}\n![](ch_3_exploring_the_cdm_files/figure-pdf/unnamed-chunk-9-1.pdf){fig-pos='H'}\n:::\n:::\n",
    "supporting": [
      "ch_3_exploring_the_cdm_files\\figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}