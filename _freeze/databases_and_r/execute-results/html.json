{
  "hash": "dcdd04c9cd295adc964f353258fc4164",
  "result": {
    "markdown": "::: {.cell}\n\n```{.r .cell-code}\nlibrary(DBI)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n\n### select()\n\n::: {.cell}\n\n```{.r .cell-code}\ncdm$person %>%\n  select(\"person_id\", \"gender_concept_id\") \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# Source:   SQL [?? x 2]\n# Database: DuckDB 0.5.0 [eburn@Windows 10 x64:R 4.2.1/C:\\Users\\eburn\\AppData\\Local\\Temp\\RtmpSOkqhP/lsrdewlz/cdm.duckdb]\n   person_id gender_concept_id\n       <dbl>             <dbl>\n 1         6              8532\n 2       123              8507\n 3       129              8507\n 4        16              8532\n 5        65              8532\n 6        74              8532\n 7        42              8532\n 8       187              8507\n 9        18              8532\n10       111              8532\n# … with more rows\n# ℹ Use `print(n = ...)` to see more rows\n```\n:::\n\n```{.r .cell-code}\ncdm$person %>%\n  select(\"person_id\", \"gender_concept_id\") %>% \n  show_query()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<SQL>\nSELECT person_id, gender_concept_id\nFROM main.person\n```\n:::\n:::\n\n\n\n### mutate()\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncdm$person %>%\n  mutate(new_variable=1) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# Source:   SQL [?? x 19]\n# Database: DuckDB 0.5.0 [eburn@Windows 10 x64:R 4.2.1/C:\\Users\\eburn\\AppData\\Local\\Temp\\RtmpSOkqhP/lsrdewlz/cdm.duckdb]\n   person_id gende…¹ year_…² month…³ day_o…⁴ birth_datetime      race_…⁵ ethni…⁶\n       <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <dttm>                <dbl>   <dbl>\n 1         6    8532    1963      12      31 1963-12-31 00:00:00    8516       0\n 2       123    8507    1950       4      12 1950-04-12 00:00:00    8527       0\n 3       129    8507    1974      10       7 1974-10-07 00:00:00    8527       0\n 4        16    8532    1971      10      13 1971-10-13 00:00:00    8527       0\n 5        65    8532    1967       3      31 1967-03-31 00:00:00    8516       0\n 6        74    8532    1972       1       5 1972-01-05 00:00:00    8527       0\n 7        42    8532    1909      11       2 1909-11-02 00:00:00    8527       0\n 8       187    8507    1945       7      23 1945-07-23 00:00:00    8527       0\n 9        18    8532    1965      11      17 1965-11-17 00:00:00    8527       0\n10       111    8532    1975       5       2 1975-05-02 00:00:00    8527       0\n# … with more rows, 11 more variables: location_id <lgl>, provider_id <lgl>,\n#   care_site_id <lgl>, person_source_value <chr>, gender_source_value <chr>,\n#   gender_source_concept_id <dbl>, race_source_value <chr>,\n#   race_source_concept_id <dbl>, ethnicity_source_value <chr>,\n#   ethnicity_source_concept_id <dbl>, new_variable <dbl>, and abbreviated\n#   variable names ¹​gender_concept_id, ²​year_of_birth, ³​month_of_birth,\n#   ⁴​day_of_birth, ⁵​race_concept_id, ⁶​ethnicity_concept_id\n# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n```\n:::\n\n```{.r .cell-code}\ncdm$person %>%\n  mutate(new_variable=1) %>%\n  show_query()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<SQL>\nSELECT *, 1.0 AS new_variable\nFROM main.person\n```\n:::\n:::\n\n\n### if_else()\n\n::: {.cell}\n\n```{.r .cell-code}\ncdm$person %>%\n  mutate(new_variable=if_else(gender_concept_id==\"8532\", \"Male\", \"Female\")) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# Source:   SQL [?? x 19]\n# Database: DuckDB 0.5.0 [eburn@Windows 10 x64:R 4.2.1/C:\\Users\\eburn\\AppData\\Local\\Temp\\RtmpSOkqhP/lsrdewlz/cdm.duckdb]\n   person_id gende…¹ year_…² month…³ day_o…⁴ birth_datetime      race_…⁵ ethni…⁶\n       <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <dttm>                <dbl>   <dbl>\n 1         6    8532    1963      12      31 1963-12-31 00:00:00    8516       0\n 2       123    8507    1950       4      12 1950-04-12 00:00:00    8527       0\n 3       129    8507    1974      10       7 1974-10-07 00:00:00    8527       0\n 4        16    8532    1971      10      13 1971-10-13 00:00:00    8527       0\n 5        65    8532    1967       3      31 1967-03-31 00:00:00    8516       0\n 6        74    8532    1972       1       5 1972-01-05 00:00:00    8527       0\n 7        42    8532    1909      11       2 1909-11-02 00:00:00    8527       0\n 8       187    8507    1945       7      23 1945-07-23 00:00:00    8527       0\n 9        18    8532    1965      11      17 1965-11-17 00:00:00    8527       0\n10       111    8532    1975       5       2 1975-05-02 00:00:00    8527       0\n# … with more rows, 11 more variables: location_id <lgl>, provider_id <lgl>,\n#   care_site_id <lgl>, person_source_value <chr>, gender_source_value <chr>,\n#   gender_source_concept_id <dbl>, race_source_value <chr>,\n#   race_source_concept_id <dbl>, ethnicity_source_value <chr>,\n#   ethnicity_source_concept_id <dbl>, new_variable <chr>, and abbreviated\n#   variable names ¹​gender_concept_id, ²​year_of_birth, ³​month_of_birth,\n#   ⁴​day_of_birth, ⁵​race_concept_id, ⁶​ethnicity_concept_id\n# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n```\n:::\n\n```{.r .cell-code}\ncdm$person %>%\n  mutate(new_variable=if_else(gender_concept_id==\"8532\", \"Male\", \"Female\")) %>%\n  show_query()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<SQL>\nSELECT\n  *,\n  CASE WHEN (gender_concept_id = '8532') THEN 'Male' WHEN NOT (gender_concept_id = '8532') THEN 'Female' END AS new_variable\nFROM main.person\n```\n:::\n:::\n\n\n### paste0\n\n::: {.cell}\n\n```{.r .cell-code}\ncdm$person %>%\n  mutate(date_of_birth = paste0(\"year_of_birth\", \"-\",\n                                \"month_of_birth\", \"-\",\n                                \"day_of_birth\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# Source:   SQL [?? x 19]\n# Database: DuckDB 0.5.0 [eburn@Windows 10 x64:R 4.2.1/C:\\Users\\eburn\\AppData\\Local\\Temp\\RtmpSOkqhP/lsrdewlz/cdm.duckdb]\n   person_id gende…¹ year_…² month…³ day_o…⁴ birth_datetime      race_…⁵ ethni…⁶\n       <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <dttm>                <dbl>   <dbl>\n 1         6    8532    1963      12      31 1963-12-31 00:00:00    8516       0\n 2       123    8507    1950       4      12 1950-04-12 00:00:00    8527       0\n 3       129    8507    1974      10       7 1974-10-07 00:00:00    8527       0\n 4        16    8532    1971      10      13 1971-10-13 00:00:00    8527       0\n 5        65    8532    1967       3      31 1967-03-31 00:00:00    8516       0\n 6        74    8532    1972       1       5 1972-01-05 00:00:00    8527       0\n 7        42    8532    1909      11       2 1909-11-02 00:00:00    8527       0\n 8       187    8507    1945       7      23 1945-07-23 00:00:00    8527       0\n 9        18    8532    1965      11      17 1965-11-17 00:00:00    8527       0\n10       111    8532    1975       5       2 1975-05-02 00:00:00    8527       0\n# … with more rows, 11 more variables: location_id <lgl>, provider_id <lgl>,\n#   care_site_id <lgl>, person_source_value <chr>, gender_source_value <chr>,\n#   gender_source_concept_id <dbl>, race_source_value <chr>,\n#   race_source_concept_id <dbl>, ethnicity_source_value <chr>,\n#   ethnicity_source_concept_id <dbl>, date_of_birth <chr>, and abbreviated\n#   variable names ¹​gender_concept_id, ²​year_of_birth, ³​month_of_birth,\n#   ⁴​day_of_birth, ⁵​race_concept_id, ⁶​ethnicity_concept_id\n# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n```\n:::\n\n```{.r .cell-code}\ncdm$person %>%\n  mutate(date_of_birth = paste0(\"year_of_birth\", \"-\",\n                                \"month_of_birth\", \"-\",\n                                \"day_of_birth\")) %>%\n  show_query()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<SQL>\nSELECT\n  *,\n  CONCAT_WS('', 'year_of_birth', '-', 'month_of_birth', '-', 'day_of_birth') AS date_of_birth\nFROM main.person\n```\n:::\n:::\n\n\n### distinct()\n\n::: {.cell}\n\n```{.r .cell-code}\ncdm$person %>%\n  select(\"gender_concept_id\") %>%\n  distinct() \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# Source:   SQL [2 x 1]\n# Database: DuckDB 0.5.0 [eburn@Windows 10 x64:R 4.2.1/C:\\Users\\eburn\\AppData\\Local\\Temp\\RtmpSOkqhP/lsrdewlz/cdm.duckdb]\n  gender_concept_id\n              <dbl>\n1              8532\n2              8507\n```\n:::\n\n```{.r .cell-code}\ncdm$person %>%\n  select(\"gender_concept_id\") %>%\n  distinct() %>%\n  show_query()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<SQL>\nSELECT DISTINCT gender_concept_id\nFROM main.person\n```\n:::\n:::\n\n\n### rename()\n\n::: {.cell}\n\n```{.r .cell-code}\ncdm$person %>%\n  rename(\"sex_concept_id\" = \"gender_concept_id\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# Source:   SQL [?? x 18]\n# Database: DuckDB 0.5.0 [eburn@Windows 10 x64:R 4.2.1/C:\\Users\\eburn\\AppData\\Local\\Temp\\RtmpSOkqhP/lsrdewlz/cdm.duckdb]\n   person_id sex_c…¹ year_…² month…³ day_o…⁴ birth_datetime      race_…⁵ ethni…⁶\n       <dbl>   <dbl>   <dbl>   <dbl>   <dbl> <dttm>                <dbl>   <dbl>\n 1         6    8532    1963      12      31 1963-12-31 00:00:00    8516       0\n 2       123    8507    1950       4      12 1950-04-12 00:00:00    8527       0\n 3       129    8507    1974      10       7 1974-10-07 00:00:00    8527       0\n 4        16    8532    1971      10      13 1971-10-13 00:00:00    8527       0\n 5        65    8532    1967       3      31 1967-03-31 00:00:00    8516       0\n 6        74    8532    1972       1       5 1972-01-05 00:00:00    8527       0\n 7        42    8532    1909      11       2 1909-11-02 00:00:00    8527       0\n 8       187    8507    1945       7      23 1945-07-23 00:00:00    8527       0\n 9        18    8532    1965      11      17 1965-11-17 00:00:00    8527       0\n10       111    8532    1975       5       2 1975-05-02 00:00:00    8527       0\n# … with more rows, 10 more variables: location_id <lgl>, provider_id <lgl>,\n#   care_site_id <lgl>, person_source_value <chr>, gender_source_value <chr>,\n#   gender_source_concept_id <dbl>, race_source_value <chr>,\n#   race_source_concept_id <dbl>, ethnicity_source_value <chr>,\n#   ethnicity_source_concept_id <dbl>, and abbreviated variable names\n#   ¹​sex_concept_id, ²​year_of_birth, ³​month_of_birth, ⁴​day_of_birth,\n#   ⁵​race_concept_id, ⁶​ethnicity_concept_id\n# ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names\n```\n:::\n\n```{.r .cell-code}\ncdm$person %>%\n  rename(\"sex_concept_id\" = \"gender_concept_id\") %>%\n  show_query()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<SQL>\nSELECT\n  person_id,\n  gender_concept_id AS sex_concept_id,\n  year_of_birth,\n  month_of_birth,\n  day_of_birth,\n  birth_datetime,\n  race_concept_id,\n  ethnicity_concept_id,\n  location_id,\n  provider_id,\n  care_site_id,\n  person_source_value,\n  gender_source_value,\n  gender_source_concept_id,\n  race_source_value,\n  race_source_concept_id,\n  ethnicity_source_value,\n  ethnicity_source_concept_id\nFROM main.person\n```\n:::\n:::\n\n\n\n### working with strings\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}