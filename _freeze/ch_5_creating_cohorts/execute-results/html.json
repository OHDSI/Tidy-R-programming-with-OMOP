{
  "hash": "d6d890a39c6ea518b14fee6bd299d255",
  "result": {
    "markdown": "---\noutput: html_document\neditor_options: \n  chunk_output_type: console\n---\n\n\n# Adding cohorts to the CDM\n\n## What is a cohort?\n\nWhen performing research with the OMOP common data model we often want to identify groups of individuals who share some set of characteristics. The criteria for including individuals can range from the seemingly simple (e.g. people diagnosed with asthma) to the much more complicated (e.g. adults diagnosed with asthma who had a year of prior observation time in the database prior to their diagnosis, had no prior history of chronic obstructive pulmonary disease, and no history of use of short-acting beta-antagonists).\n\nThe set of people we identify are cohorts, and the OMOP CDM has a specific structure by which they can be represented, with a cohort table having four required fields: 1) cohort definition id (a unique identifier for each cohort), 2) subject id (a foreign key to the subject in the cohort - typically referring to records in the person table), 3) cohort start date, and 4) cohort end date. Individuals can enter a cohort multiple times, but the time in which they are in the cohort cannot overlap.\n\n## Set up\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(CDMConnector)\nlibrary(dplyr)\nlibrary(PatientProfiles)\nlibrary(CodelistGenerator)\nlibrary(IncidencePrevalence)\nlibrary(DrugUtilisation)\n        \ndb <- DBI::dbConnect(duckdb::duckdb(), eunomia_dir())\n\ncdm <- cdm_from_con(\n  con = db,\n  cdm_schema = \"main\",\n  write_schema = \"main\"\n)\n```\n:::\n\n\n## Creating a base cohort\n\nWe can create a set of base cohorts using a code lists or concept set\n\n### General concept based cohort\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncdm <- generate_concept_cohort_set(cdm, \n                            concept_set = list(\"gi_bleed\" = 192671), \n                            limit = \"all\", \n                            end = 30,\n                            name = \"gi_bleed\",\n                            overwrite = TRUE)\ncdm$gi_bleed %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: ??\nColumns: 4\nDatabase: DuckDB v0.10.3-dev797 [eburn@Windows 10 x64:R 4.2.1/C:\\Users\\eburn\\AppData\\Local\\Temp\\RtmpsbNTVu\\file6af41974048.duckdb]\n$ cohort_definition_id <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ subject_id           <int> 1112, 2054, 2677, 5104, 5299, 582, 847, 3290, 365…\n$ cohort_start_date    <date> 2007-08-17, 2010-10-05, 2007-01-26, 2017-06-24, …\n$ cohort_end_date      <date> 2007-09-16, 2010-11-04, 2007-02-25, 2017-07-24, …\n```\n:::\n:::\n\n\n### Characteristic cohorts\n\nWe can use IncidencePrevalence ....\n\nHere for example we'll generate a cohort of people aged between 18 and 50. Individuals will enter the cohort once they are in database and satisfy the age requirement.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncdm <- generateDenominatorCohortSet(cdm = cdm, \n                             name = \"age_cohorts\", \n                             ageGroup = list(c(18, 50)))\n```\n:::\n\n\n### Drug-specific cohorts\n\nMeanwhile, if we are interested in defining a drug cohort we can use the We can use `DrugUtilisation` package, where we have additional parameters related to defining cohorts for drug utilisation studies. Below, for example, we create a cohort of acetaminophen users where we combine any combine any two exposures with the less than 7 days between them into the same cohort record.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncdm <- generateDrugUtilisationCohortSet(cdm = cdm,\n                                 name = \"acetaminophen\", \n                                 conceptSet = list(\"acetaminophen\" = \n                                                         c(1125315,\n                                                              1127078,\n                                                              1127433,\n                                                              40229134,\n                                                              40231925,\n                                                              40162522,\n                                                              19133768)), \n                                 gapEra = 7)\n```\n:::\n\n\n::: {.callout-tip collapse=\"true\"}\n### Finding appropriate codes\n\nIn the defining the cohorts above we have needed to provide concept IDs to define our cohort. But, where do these come from?\n\nWe can search for codes of interest using the `CodelistGenerator` package. This can be done using a text search with the function `CodelistGenerator::getCandidateCodes()`. For example, we can find the GI code we use above like so:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngetCandidateCodes(cdm = cdm, \n                  keywords = \"Gastrointestinal hemorrhage\",\n                  domains = \"condition\",\n                  includeDescendants = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLimiting to domains of interest\nGetting concepts to include\nAdding descendants\nSearch completed. Finishing up.\n✔ 1 candidate concept identified\n\nTime taken: 0 minutes and 0 seconds\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 6\n  concept_id found_from    concept_name domain_id vocabulary_id standard_concept\n       <int> <chr>         <chr>        <chr>     <chr>         <chr>           \n1     192671 From initial… Gastrointes… Condition SNOMED        S               \n```\n:::\n:::\n\n\nWe can also do automated searches that make use of the hierarchies in the vocabularies. Here, for example, we find the code for the drug ingredient Acetaminophen and all of it's descendants.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nCodelistGenerator::getDrugIngredientCodes(cdm = cdm, \n                                          name = \"acetaminophen\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── 1 codelist ──────────────────────────────────────────────────────────────────\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n- acetaminophen (7 codes)\n```\n:::\n:::\n\n\nNote that the data we're using just has a subset of the full OMOP CDM vocabularies. In practice, these searches would return many more codes. And in the case of the former in particular, clinical expertise would then be required to decide which of the codes were in line with the clinical idea at hand.\n:::\n\n::: {.callout-tip collapse=\"true\"}\n### Applying the appropriate logic when creating a cohort\n\nAs well as including appropriate concepts, we also face various other choices when defining our cohort. Decisions are required as to whether to include only the first event or the all events for an individual. We'll also need to make decisions cohort end dates, which could range from the same day as cohort entry to the end of an individual's observation period. For a drug utilisation cohort we then have even more decisions, such whether to combine cohorts with less than some specified days gap between one ending and the next starting.\n\nThese decisions for cohort logic will often reflect the way the cohort is being used in answering the study question. Like with including the right concepts, careful consideration will need to be taken when deciding on these parameters.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# To add\n```\n:::\n\n:::\n\n## Cohort attributes\n\nThe set of cohorts we create will be associated with various attributes. The cohort set attribute contains information on the cohorts that we've generated.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsettings(cdm$gi_bleed) %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1\nColumns: 6\n$ cohort_definition_id <int> 1\n$ cohort_name          <chr> \"gi_bleed\"\n$ limit                <chr> \"all\"\n$ prior_observation    <dbl> 0\n$ future_observation   <dbl> 0\n$ end                  <dbl> 30\n```\n:::\n:::\n\n\nAnother attribute contains counts of the cohorts we've created.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncohortCount(cdm$gi_bleed) %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1\nColumns: 3\n$ cohort_definition_id <int> 1\n$ number_records       <int> 479\n$ number_subjects      <int> 479\n```\n:::\n:::\n\n\nAnd we can also see attrition related to the cohort. We'll see below how any addition inclusion criteria that we apply can be recorded using this attrition attribute.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattrition(cdm$gi_bleed) %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1\nColumns: 7\n$ cohort_definition_id <int> 1\n$ number_records       <int> 479\n$ number_subjects      <int> 479\n$ reason_id            <int> 1\n$ reason               <chr> \"Initial qualifying events\"\n$ excluded_records     <int> 0\n$ excluded_subjects    <int> 0\n```\n:::\n:::\n\n\n## Applying inclusion criteria\n\n### Applying demographic inclusion criteria\n\nSay for our study we want to include people with a GI bleed who were aged 40 or over at the time. We can use the add variables with these characteristics as seen in chapter 4 and then filter accordingly. The function `CDMConnector::record_cohort_attrition()` will then update our cohort attributes as we can see below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncdm$gi_bleed <- cdm$gi_bleed %>%\n  addDemographics(indexDate = \"cohort_start_date\") %>%\n  filter(age >= 40) %>%\n  compute(temporary = FALSE, name = \"gi_bleed\") %>% \n  record_cohort_attrition(reason = \"Age 18 or older\") %>%\n  filter(sex == \"Male\") %>%\n  compute(temporary = FALSE, name = \"gi_bleed\") %>% \n  record_cohort_attrition(\"Male\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncohortCount(cdm$gi_bleed)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n  cohort_definition_id number_records number_subjects\n                 <int>          <int>           <int>\n1                    1             94              94\n```\n:::\n\n```{.r .cell-code}\nattrition(cdm$gi_bleed)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 7\n  cohort_definition_id number_records number_subjects reason_id reason          \n                 <int>          <int>           <int>     <int> <chr>           \n1                    1            479             479         1 Initial qualify…\n2                    1            183             183         2 Age 18 or older \n3                    1             94              94         3 Male            \n# ℹ 2 more variables: excluded_records <int>, excluded_subjects <int>\n```\n:::\n:::\n\n\n### Applying cohort-based inclusion criteria\n\nAs well as requirements about specific demographics, we may also want to use another cohort for inclusion criteria. Let's say we want to exclude anyone with rheumatoid arthritis diagnosed before their GI bleed. We can first generate this cohort and then apply this additional exclusion criteria like so.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncdm$gi_bleed <- cdm$gi_bleed %>% \n  addCohortIntersectFlag(targetCohortTable = \"acetaminophen\", \n                         indexDate = \"cohort_start_date\", \n                         window =c(-Inf, -1), \n                         nameStyle = \"acetaminophen_excl\") %>% \n  filter(acetaminophen_excl == 1) %>% \n  compute(temporary = FALSE, name = \"gi_bleed\") %>% \n  record_cohort_attrition(\"Prior use of acetaminophen\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncohortCount(cdm$gi_bleed)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n  cohort_definition_id number_records number_subjects\n                 <int>          <int>           <int>\n1                    1             93              93\n```\n:::\n\n```{.r .cell-code}\nattrition(cdm$gi_bleed)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 7\n  cohort_definition_id number_records number_subjects reason_id reason          \n                 <int>          <int>           <int>     <int> <chr>           \n1                    1            479             479         1 Initial qualify…\n2                    1            183             183         2 Age 18 or older \n3                    1             94              94         3 Male            \n4                    1             93              93         4 Prior use of ac…\n# ℹ 2 more variables: excluded_records <int>, excluded_subjects <int>\n```\n:::\n:::\n\n\n## Creating multiple derived cohorts\n\nTO BE DONE\n\n\n::: {.cell}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}